/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEFAULT 0
#define LOWER   1
#define RAISE   2
#define COMBINED 3

&mt {
    tapping-term-ms = <180>;
    flavor = "balanced";
};

/ {
    macros {
        clrpckr: clrpckr {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LGUI>,
                <&macro_press>,
                <&kp LSHFT>,
                <&macro_tap>,
                <&kp C>,
                <&macro_release>,
                <&kp LSHFT>,
                <&macro_release>,
                <&kp LGUI>;
        };

        lng_sw: lng_sw {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LGUI>,
                <&macro_tap>,
                <&kp SPACE>,
                <&macro_release>,
                <&kp LGUI>;
        };

        srccut: srccut {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LGUI>,
                <&macro_press>,
                <&kp LSHFT>,
                <&macro_tap>,
                <&kp S>,
                <&macro_release>,
                <&kp LSHFT>,
                <&macro_release>,
                <&kp LGUI>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&mt LGUI RBKT    &kp Q  &kp W  &kp E          &kp R             &kp T              &kp Y          &kp U          &kp I          &kp O    &kp P     &kp LBKT
&mt LCTRL GRAVE  &kp A  &kp S  &kp D          &kp F             &kp G              &kp H          &kp J          &kp K          &kp L    &kp SEMI  &kp SINGLE_QUOTE
&mt LALT MINUS   &kp Z  &kp X  &kp C          &kp V             &kp B              &kp N          &kp M          &kp COMMA      &kp DOT  &kp FSLH  &kp BACKSLASH
                               &lt RAISE TAB  &mt LSHIFT SPACE  &lt LOWER ENTER    &lt LOWER ESC  &kp BACKSPACE  &lt RAISE DEL
            >;
        };

        lower_layer {
            bindings = <
&kp LEFT_GUI  &none  &none  &none   &none   &kp F5      &kp EXCL   &kp AT         &kp HASH      &kp DLLR    &kp PERCENT   &kp RGUI
&kp LCTRL     &none  &none  &none   &kp F2  &clrpckr    &kp CARET  &kp AMPERSAND  &kp ASTERISK  &kp LPAR    &kp RPAR      &kp RCTRL
&kp EQUAL     &none  &none  &none   &none   &lng_sw     &kp SLASH  &kp BACKSLASH  &kp C_VOL_DN  &kp C_MUTE  &kp C_VOL_UP  &kp RALT
                            &trans  &trans  &trans      &trans     &trans         &trans
            >;
        };

        raise_layer {
            bindings = <
&kp LGUI   &kp ASTRK  &kp N7  &kp N8  &kp N9  &kp PLUS        &kp LPAR       &kp RPAR  &kp UP    &kp PG_UP  &kp HOME  &kp RGUI
&kp LCTRL  &kp SLASH  &kp N4  &kp N5  &kp N6  &kp KP_MINUS    &kp SLASH      &kp LEFT  &kp DOWN  &kp RIGHT  &kp END   &kp RCTRL
&kp EQUAL  &kp N0     &kp N1  &kp N2  &kp N3  &kp KP_DOT      &kp BACKSLASH  &none     &none     &kp PG_DN  &none     &kp RALT
                              &trans  &trans  &trans          &trans         &trans    &trans
            >;
        };

        combined_layer {
            bindings = <
&srccut  &kp F1  &kp F2   &kp F3   &kp F4   &kp PSCRN    &kp KP_NUM      &none         &none         &none         &none         &none
&none    &kp F5  &kp F6   &kp F7   &kp F8   &none        &kp SCROLLLOCK  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&none    &kp F9  &kp F10  &kp F11  &kp F12  &none        &kp CAPS        &none         &none         &none         &none         &bt BT_CLR
                          &trans   &trans   &trans       &trans          &trans        &trans
            >;
        };
    };
};
